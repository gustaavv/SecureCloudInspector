name: Release

on:
  push:
    tags:
      - '*'

permissions:
  contents: write

jobs:
  Cli:
    runs-on: ubuntu-latest
    name: SCI-CLI build and release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup DotNet Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'
      
      - name: Build and publish
        run: |
          dotnet build --configuration Release
          dotnet publish ./SCICli/SCICli.csproj --configuration Release --output ./publish

      - name: Get tag name
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Make artifacts
        run: zip -j ./publish/SCICli-${{ env.TAG }}-win64.zip ./publish/SCICli.exe

      - name: Copy release note
        run: |
          cat ./releaseNotes/${{ env.TAG }}.md >> body.md
          echo "" >> body.md

      - name: Generate checksum
        run: |
          echo "## Checksum for SCICli-${{ env.TAG }}-win64.zip" >> body.md
          echo "| Checksum | Value |" >> body.md
          echo "| -------- | ----- |" >> body.md
          zipPath="./publish/SCICli-${{ env.TAG }}-win64.zip"
          echo "| sha256   | $(sha256sum ${zipPath} | awk '{print $1}') |" >> body.md
          echo "| sha1   | $(sha1sum ${zipPath} | awk '{print $1}') |" >> body.md
          echo "| md5   | $(md5sum ${zipPath} | awk '{print $1}') |" >> body.md
          echo "" >> body.md

      - name: VirusTotal Scan
        run: |
          pip install vt-py
          
          python -c "
          
          import vt
          client = vt.Client('${{ secrets.VIRUSTOTAL_API_KEY }}')

          def scan(filepath):
            with open(filepath, 'rb') as f:
                analysis = client.scan_file(f)
            # print(f'analysis id for {filepath}: ', analysis.id)

            file_id = client.get_object(f'/analyses/{analysis.id}/item').id
            # print(f'file id for {filepath}:', file_id)

            url = f'https://www.virustotal.com/gui/file/{file_id}'
            # print('url for {filepath}: ', url)
            return url

          print(f'## SECURITY')
          print(f'VirusTotal Scan:')
          print('- [SCICli.exe]({})'.format(scan('./publish/SCICli.exe')))
          
          " >> body.md

      - name: Upload to GitHub release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./publish/SCICli-${{ env.TAG }}-win64.zip
          bodyFile: body.md